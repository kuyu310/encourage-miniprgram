<template>
  <view class="p-wanted c-mlr c-mt c-pb">    
    <navigator
      url="/pages/wanted/collect"
      class="head c-w-100 c-br c-o-h c-p-r c-mb-28">
      <image 
        mode="aspectFill"
        src="/images/wanted-bg.png" 
        class="c-h-100 c-w-100 c-p-abs .c-zi--1" />
      <view class="c-flex c-plr-60 c-h-100 c-w-100">
        <view class="c-d-f">
          <image 
            src="/images/book.png" 
            class="i-book c-mr" />
          <view>
            <view class="c-c-fff c-fw-b c-mb-12">悬赏榜金点子征集令</view>
            <view class="c-c-fff c-fs-24">已征集 <text class="orange">{{amount + 50}}</text> 条</view>
          </view>
        </view>      
        <image src="/images/go.png" class="i-go" />
      </view>
            
    </navigator>

    <view
      wx:for="{{ formatList }}"
      @tap="toDetail( {{ item }} )"
      class="c-w-100 c-br c-bs c-o-h c-p-r {{ index < formatList.length - 1 ? 'c-mb' : '' }}">
      <image 
        mode="aspectFill"
        src="{{ item.poster }}" 
        class="c-bc-999 c-w-100 activity-img" />
      <image 
        mode="aspectFill" 
        src="/images/{{ item.statusIcon }}" 
        class="badge c-p-a" />
      <view class="c-p">
        <text class="c-d-b c-fw-b">{{ item.rewardTitle }}</text>
        <text class="c-fs-24">活动时间：{{ item.startTime }}至{{ item.endTime }}</text>
      </view>
    </view>

  </view>
</template>

<script>
import wepy from 'wepy'
import { wantedIdeasAmount, wantedList } from '@/api'
import { ApiOrigin } from '@/shared/const'
import { dateFormat } from '@/shared/util'

export default class Wanted extends wepy.page {
  config = {
    navigationBarTitleText: '悬赏榜'
  }
  data = {
    amount: 0,
    list: []
  }
  computed = {
    formatList() {
      return this.list.map(i => {
        const status = this.getStatus(i)
        return Object.assign(i, {
          status: status,
          statusIcon: status === 0 ? 'wanted-todo.png' : status === 1 ? 'wanted-doing.png' : 'wanted-done.png',
          poster: ApiOrigin + i.rewardPicture
        })
      })
    }
  }
  methods = {
    toDetail(item) {
      wepy.setStorageSync('wanted:item', item)
      wepy.navigateTo({ url: '/pages/wanted/detail' })
    }
  }
  /**
   * 获取悬赏活动状态
   * @return 0-悬赏未开始 1-悬赏进行中 2-悬赏已结束
   */
  getStatus({ startTime: start, endTime: end } = {}) {
    const now = +new Date(dateFormat(new Date(), 'yyyy-MM-dd'))
    let startTime = +new Date(start)
    let endTime = +new Date(end)
    return startTime - now > 0 ? 0 : now - endTime > 0 ? 2 : 1
  }
  async onShow() {
    await this.$root.$parent.globalData.process
    if (!this.list.length) {
      const list = await wantedList()
      this.list = (list && list.datas && list.datas.rewardsList) || []
    }
    const amount = await wantedIdeasAmount()
    this.amount = (amount && amount.datas && amount.datas.count) || 0
    this.$apply()
  }
}
</script>

<style lang="scss">
.p-wanted {
  .head {
    height: 200rpx;
    box-shadow: 0 20rpx 25rpx rgba(255, 166, 0, .4);
    .i-book {
      width: 88rpx;
      height: 91rpx;
    }
    .i-go {
      width: 140rpx;
      height: 142rpx;
    }
    .orange {
      color: rgb(255, 242, 87);
    }
  }
  .activity-img {
    height: 300rpx;
  }
  .badge {
    width: 147rpx;
    height: 148rpx;
    right: 0;
    top: 0;
  }
}
</style>
